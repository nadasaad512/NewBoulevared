import 'package:new_boulevard/models/ads.dart';
import 'package:new_boulevard/models/categories.dart';
import 'package:new_boulevard/models/special_ads.dart';
import 'package:new_boulevard/models/user.dart';

class Autogenerated {
  bool? status;
  int? code;
  String? message;
  List<Stores>? stores;
  List<SpecialAds>? specialAds;
  List<Categories>? categories;

  Autogenerated(
      {this.status,
      this.code,
      this.message,
      this.stores,
      this.specialAds,
      this.categories});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    code = json['code'];
    message = json['message'];
    if (json['stores'] != null) {
      stores = <Stores>[];
      json['stores'].forEach((v) {
        stores!.add(Stores.fromJson(v));
      });
    }
    if (json['special_ads'] != null) {
      specialAds = <SpecialAds>[];
      json['special_ads'].forEach((v) {
        specialAds!.add(SpecialAds.fromJson(v));
      });
    }
    if (json['categories'] != null) {
      categories = <Categories>[];
      json['categories'].forEach((v) {
        categories!.add(Categories.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['status'] = status;
    data['code'] = code;
    data['message'] = message;
    if (stores != null) {
      data['stores'] = stores!.map((v) => v.toJson()).toList();
    }
    if (specialAds != null) {
      data['special_ads'] = specialAds!.map((v) => v.toJson()).toList();
    }
    if (categories != null) {
      data['categories'] = categories!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Stores {
  int? id;
  int? adTypeId;
  int? userId;
  int? categoryId;
  int? cityId;
  String? image;
  String? status;
  String? name;
  String? details;
  AdType? adType;
  Category? category;
  City? city;
  List<story1>? adImages;
  Advertiser? advertiser;
  List<story1>? adVideos;

  Stores();

  Stores.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    adTypeId = json['ad_type_id'];
    userId = json['user_id'];
    categoryId = json['category_id'];
    cityId = json['city_id'];
    image = json['image'];
    status = json['status'];
    name = json['name'];
    details = json['details'];
    adType = json['ad_type'] != null ? AdType.fromJson(json['ad_type']) : null;
    category =
        json['category'] != null ? Category.fromJson(json['category']) : null;
    city = json['city'] != null ? City.fromJson(json['city']) : null;
    if (json['ad_images'] != null) {
      adImages = <story1>[];
      json['ad_images'].forEach((v) {
        adImages!.add(story1.fromJson(v));
      });
    }
    if (json['ad_videos'] != null) {
      adVideos = <story1>[];
      json['ad_videos'].forEach((v) {
        adVideos!.add(story1.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['id'] = id;
    data['ad_type_id'] = adTypeId;
    data['user_id'] = userId;
    data['category_id'] = categoryId;
    data['city_id'] = cityId;
    data['image'] = image;
    data['status'] = status;
    data['name'] = name;
    data['details'] = details;
    if (adType != null) {
      data['ad_type'] = adType!.toJson();
    }
    if (category != null) {
      data['category'] = category!.toJson();
    }
    if (city != null) {
      data['city'] = city!.toJson();
    }
    if (adImages != null) {
      data['ad_images'] = adImages!.map((v) => v.toJson()).toList();
    }
    if (adVideos != null) {
      data['ad_videos'] = adVideos!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Category {
  int? id;
  String? image;
  String? name;

  Category({this.id, this.image, this.name});

  Category.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    image = json['image'];
    name = json['name'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['id'] = id;
    data['image'] = image;
    data['name'] = name;
    return data;
  }
}
