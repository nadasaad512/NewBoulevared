import 'package:new_boulevard/models/city.dart';

import 'ads.dart';
import 'categories.dart';

class Autogenerated {
  bool? status;
  int? code;
  String? message;
  Settings? settings;

  Autogenerated({this.status, this.code, this.message, this.settings});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    code = json['code'];
    message = json['message'];
    settings = json['settings'] != null
        ? new Settings.fromJson(json['settings'])
        : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['status'] = this.status;
    data['code'] = this.code;
    data['message'] = this.message;
    if (this.settings != null) {
      data['settings'] = this.settings!.toJson();
    }
    return data;
  }
}

class Settings {
  int? id;
  String? url;
  String? logo;
  String? infoEmail;
  String? mobile;
  String? phone;
  String? facebook;
  String? twitter;
  String? linkedIn;
  String? instagram;
  String? youtube;
  String? whatsapp;
  String? latitude;
  String? longitude;
  int? rowsPaginationCount;
  List<Cities>? cities;
  AboutUs? aboutUs;
  AboutUs? privacy;
  AboutUs? termsConditions;
  List<Categories>? categories;
  List<AdType>? adsType;
  List<PaymentMethods>? paymentMethods;
  String? title;
  String? address;
  String? description;

  Settings();

  Settings.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    url = json['url'];
    logo = json['logo'];
    infoEmail = json['info_email'];
    mobile = json['mobile'];
    phone = json['phone'];
    facebook = json['facebook'];
    twitter = json['twitter'];
    linkedIn = json['linked_in'];
    instagram = json['instagram'];
    youtube = json['youtube'];
    whatsapp = json['whatsapp'];
    latitude = json['latitude'];
    longitude = json['longitude'];
    rowsPaginationCount = json['rows_pagination_count'];
    if (json['cities'] != null) {
      cities = <Cities>[];
      json['cities'].forEach((v) {
        cities!.add(new Cities.fromJson(v));
      });
    }
    aboutUs = json['about_us'] != null
        ? new AboutUs.fromJson(json['about_us'])
        : null;
    privacy =
    json['privacy'] != null ? new AboutUs.fromJson(json['privacy']) : null;
    termsConditions = json['terms_conditions'] != null
        ? new AboutUs.fromJson(json['terms_conditions'])
        : null;
    if (json['categories'] != null) {
      categories = <Categories>[];
      json['categories'].forEach((v) {
        categories!.add(new Categories.fromJson(v));
      });
    }
    if (json['ads_type'] != null) {
      adsType = <AdType>[];
      json['ads_type'].forEach((v) {
        adsType!.add(new AdType.fromJson(v));
      });
    }
    if (json['payment_methods'] != null) {
      paymentMethods = <PaymentMethods>[];
      json['payment_methods'].forEach((v) {
        paymentMethods!.add(new PaymentMethods.fromJson(v));
      });
    }
    title = json['title'];
    address = json['address'];
    description = json['description'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['url'] = this.url;
    data['logo'] = this.logo;
    data['info_email'] = this.infoEmail;
    data['mobile'] = this.mobile;
    data['phone'] = this.phone;
    data['facebook'] = this.facebook;
    data['twitter'] = this.twitter;
    data['linked_in'] = this.linkedIn;
    data['instagram'] = this.instagram;
    data['youtube'] = this.youtube;
    data['whatsapp'] = this.whatsapp;
    data['latitude'] = this.latitude;
    data['longitude'] = this.longitude;
    data['rows_pagination_count'] = this.rowsPaginationCount;
    if (this.cities != null) {
      data['cities'] = this.cities!.map((v) => v.toJson()).toList();
    }
    if (this.aboutUs != null) {
      data['about_us'] = this.aboutUs!.toJson();
    }
    if (this.privacy != null) {
      data['privacy'] = this.privacy!.toJson();
    }
    if (this.termsConditions != null) {
      data['terms_conditions'] = this.termsConditions!.toJson();
    }
    if (this.categories != null) {
      data['categories'] = this.categories!.map((v) => v.toJson()).toList();
    }
    if (this.adsType != null) {
      data['ads_type'] = this.adsType!.map((v) => v.toJson()).toList();
    }
    if (this.paymentMethods != null) {
      data['payment_methods'] =
          this.paymentMethods!.map((v) => v.toJson()).toList();
    }
    data['title'] = this.title;
    data['address'] = this.address;
    data['description'] = this.description;
    return data;
  }
}



class AboutUs {
  int? id;
  String? image;
  String? title;
  String? description;

  AboutUs({this.id, this.image, this.title, this.description});

  AboutUs.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    image = json['image'];
    title = json['title'];
    description = json['description'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['image'] = this.image;
    data['title'] = this.title;
    data['description'] = this.description;
    return data;
  }
}

class PaymentMethods {
  late int id;
  late  String name;

  PaymentMethods();

  PaymentMethods.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['name'] = this.name;
    return data;
  }
}



